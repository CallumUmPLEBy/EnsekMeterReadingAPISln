"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[3549],{43737:(oe,j,o)=>{o.r(j),o.d(j,{plugin:()=>ie});var d=o(82897),I=o(7238),A=o(55294),B=o(82378),D=o(52423),s=o(68404);class F extends s.PureComponent{render(){return s.createElement("div",null,s.createElement("h2",null,"Cloud Monitoring alias patterns"),s.createElement("div",null,s.createElement("p",null,"Format the legend keys any way you want by using alias patterns. Format the legend keys any way you want by using alias patterns."),"Example:",s.createElement("code",null,"{{metric.name}} - {{metric.label.instance_name}}"),s.createElement("br",null),"Result: \xA0\xA0",s.createElement("code",null,"cpu/usage_time - server1-europe-west-1"),s.createElement("br",null),s.createElement("br",null),s.createElement("span",null,"Patterns:"),s.createElement("br",null),s.createElement("ul",{className:D.css`
              list-style: none;
            `},s.createElement("li",null,s.createElement("code",null,"{{metric.type}}")," = metric type e.g. compute.googleapis.com/instance/cpu/usage_time"),s.createElement("li",null,s.createElement("code",null,"{{metric.name}}")," = name part of metric e.g. instance/cpu/usage_time"),s.createElement("li",null,s.createElement("code",null,"{{metric.service}}")," = service part of metric e.g. compute"),s.createElement("li",null,s.createElement("code",null,"{{metric.label.label_name}}")," = Metric label metadata e.g. metric.label.instance_name"),s.createElement("li",null,s.createElement("code",null,"{{resource.label.label_name}}")," = Resource label metadata e.g. resource.label.zone"),s.createElement("li",null,s.createElement("code",null,"{{metadata.system_labels.name}}")," = Meta data system labels e.g. metadata.system_labels.name. For this to work, the needs to be included in the group by"),s.createElement("li",null,s.createElement("code",null,"{{metadata.user_labels.name}}")," = Meta data user labels e.g. metadata.user_labels.name. For this to work, the needs to be included in the group by"),s.createElement("li",null,s.createElement("code",null,"{{bucket}}")," = bucket boundary for distribution metrics when using a heatmap in Grafana"),s.createElement("li",null,s.createElement("code",null,"{{project}}")," = The project name that was specified in the query editor"),s.createElement("li",null,s.createElement("code",null,"{{service}}")," = The service id that was specified in the SLO query editor"),s.createElement("li",null,s.createElement("code",null,"{{slo}}")," = The SLO id that was specified in the SLO query editor"),s.createElement("li",null,s.createElement("code",null,"{{selector}}")," = The Selector function that was specified in the SLO query editor"))))}}var w=o(83341);class $ extends s.PureComponent{render(){return s.createElement(s.Fragment,null,s.createElement(w.ConnectionConfig,{...this.props}))}}var K=o(92773),T=o(40885),v=o(36967),n=o(12767),y=o(98626);class C extends s.PureComponent{constructor(e){super(e),this.queryTypes=[{value:n.Bp.Projects,label:"Projects"},{value:n.Bp.Services,label:"Services"},{value:n.Bp.MetricTypes,label:"Metric Types"},{value:n.Bp.LabelKeys,label:"Label Keys"},{value:n.Bp.LabelValues,label:"Label Values"},{value:n.Bp.ResourceTypes,label:"Resource Types"},{value:n.Bp.Aggregations,label:"Aggregations"},{value:n.Bp.Aligners,label:"Aligners"},{value:n.Bp.AlignmentPeriods,label:"Alignment Periods"},{value:n.Bp.Selectors,label:"Selectors"},{value:n.Bp.SLOServices,label:"SLO Services"},{value:n.Bp.SLO,label:"Service Level Objectives (SLO)"}],this.defaults={selectedQueryType:this.queryTypes[0].value,metricDescriptors:[],selectedService:"",selectedMetricType:"",labels:[],labelKey:"",metricTypes:[],services:[],sloServices:[],selectedSLOService:"",projects:[],projectName:"",loading:!0},this.onPropsChange=()=>{const{metricDescriptors:t,labels:r,metricTypes:a,services:i,...l}=this.state;this.props.onChange({...l,refId:"CloudMonitoringVariableQueryEditor-VariableQuery"})},this.state=Object.assign(this.defaults,this.props.query)}async componentDidMount(){await this.props.datasource.ensureGCEDefaultProject();const e=this.props.datasource.getDefaultProject(),t=await this.props.datasource.getProjects(),r=await this.props.datasource.getMetricTypes(this.props.query.projectName||this.props.datasource.getDefaultProject()),a=(0,v.qA)(r).map(S=>({value:S.service,label:S.serviceShortName}));let i="";a.some(S=>S.value===(0,T.J)().replace(this.state.selectedService))?i=this.state.selectedService:a&&a.length>0&&(i=a[0].value);const{metricTypes:l,selectedMetricType:h}=(0,v.FL)(r,this.state.selectedMetricType,(0,T.J)().replace(this.state.selectedMetricType),(0,T.J)().replace(i)),m=await this.props.datasource.getSLOServices(e),g={services:a,selectedService:i,metricTypes:l,selectedMetricType:h,metricDescriptors:r,projects:t,...await this.getLabels(h,e),sloServices:m,loading:!1,projectName:e};this.setState(g,()=>this.onPropsChange())}async onQueryTypeChange(e){const t={selectedQueryType:e,...await this.getLabels(this.state.selectedMetricType,this.state.projectName,e)};this.setState(t)}async onProjectChange(e){const t=await this.props.datasource.getMetricTypes(e),r=await this.getLabels(this.state.selectedMetricType,e),{metricTypes:a,selectedMetricType:i}=(0,v.FL)(t,this.state.selectedMetricType,(0,T.J)().replace(this.state.selectedMetricType),(0,T.J)().replace(this.state.selectedService)),l=await this.props.datasource.getSLOServices(e);this.setState({...r,metricTypes:a,selectedMetricType:i,metricDescriptors:t,projectName:e,sloServices:l},()=>this.onPropsChange())}async onServiceChange(e){const{metricTypes:t,selectedMetricType:r}=(0,v.FL)(this.state.metricDescriptors,this.state.selectedMetricType,(0,T.J)().replace(this.state.selectedMetricType),(0,T.J)().replace(e)),a={selectedService:e,metricTypes:t,selectedMetricType:r,...await this.getLabels(r,this.state.projectName)};this.setState(a,()=>this.onPropsChange())}async onMetricTypeChange(e){const t={selectedMetricType:e,...await this.getLabels(e,this.state.projectName)};this.setState(t,()=>this.onPropsChange())}onLabelKeyChange(e){this.setState({labelKey:e},()=>this.onPropsChange())}componentDidUpdate(e,t){const r=t.selectedQueryType!==this.state.selectedQueryType,a=this.state.selectedSLOService!==t.selectedSLOService;(r||a)&&this.onPropsChange()}async getLabels(e,t,r=this.state.selectedQueryType){let a={labels:this.state.labels,labelKey:this.state.labelKey};if(e&&r===n.Bp.LabelValues){const i=await(0,v.Qd)(this.props.datasource,e,t),l=i.some(h=>h===(0,T.J)().replace(this.state.labelKey))?this.state.labelKey:i[0];a={labels:i,labelKey:l}}return a}renderQueryTypeSwitch(e){const t={label:"Template Variables",expanded:!1,options:(0,T.J)().getVariables().map(r=>({value:`$${r.name}`,label:`$${r.name}`}))};switch(e){case n.Bp.MetricTypes:return s.createElement(s.Fragment,null,s.createElement(y.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:r=>this.onProjectChange(r),label:"Project"}),s.createElement(y.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:r=>this.onServiceChange(r),label:"Service"}));case n.Bp.LabelKeys:case n.Bp.LabelValues:case n.Bp.ResourceTypes:return s.createElement(s.Fragment,null,s.createElement(y.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:r=>this.onProjectChange(r),label:"Project"}),s.createElement(y.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:r=>this.onServiceChange(r),label:"Service"}),s.createElement(y.Th,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(({value:r,name:a})=>({value:r,label:a}))],onChange:r=>this.onMetricTypeChange(r),label:"Metric Type"}),e===n.Bp.LabelValues&&s.createElement(y.Th,{value:this.state.labelKey,options:[t,...this.state.labels.map(r=>({value:r,label:r}))],onChange:r=>this.onLabelKeyChange(r),label:"Label Key"}));case n.Bp.Aligners:case n.Bp.Aggregations:return s.createElement(s.Fragment,null,s.createElement(y.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:r=>this.onServiceChange(r),label:"Service"}),s.createElement(y.Th,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(({value:r,name:a})=>({value:r,label:a}))],onChange:r=>this.onMetricTypeChange(r),label:"Metric Type"}));case n.Bp.SLOServices:return s.createElement(s.Fragment,null,s.createElement(y.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:r=>this.onProjectChange(r),label:"Project"}));case n.Bp.SLO:return s.createElement(s.Fragment,null,s.createElement(y.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:r=>this.onProjectChange(r),label:"Project"}),s.createElement(y.Th,{value:this.state.selectedSLOService,options:[t,...this.state.sloServices],onChange:r=>{this.setState({...this.state,selectedSLOService:r})},label:"SLO Service"}));default:return""}}render(){return this.state.loading?s.createElement("div",{className:"gf-form max-width-21"},s.createElement("span",{className:"gf-form-label width-10 query-keyword"},"Query Type"),s.createElement("div",{className:"gf-form-select-wrapper max-width-12"},s.createElement("select",{className:"gf-form-input"},s.createElement("option",null,"Loading...")))):s.createElement(s.Fragment,null,s.createElement(y.Th,{value:this.state.selectedQueryType,options:this.queryTypes,onChange:e=>this.onQueryTypeChange(e),label:"Query Type"}),this.renderQueryTypeSwitch(this.state.selectedQueryType))}}var M=o(3363),V=o(53786),f=o(85526),O=o(98356),P=o(2101),U=o(22069),G=o(54899),J=o(32689),z=o(19349),Y=o(98639),N=o(70197),H=o(63134),b=o(26418),R=o(46967),x=o(32060);const W=u=>({...(0,x.mO)(u),title:"",text:""}),Z=u=>{const{datasource:e,query:t,onRunQuery:r,data:a,onChange:i}=u,h=(a?.series.length?a?.series[0].meta:{})?.custom??{},m={...W(e),...t.timeSeriesList},[g,S]=(0,s.useState)(m.title||""),[p,c]=(0,s.useState)(m.text||""),E={label:"Template Variables",options:e.getVariables().map(H.E)},ne=Q=>{S(Q.target.value)},le=Q=>{c(Q.target.value)};return(0,N.Z)(()=>{i({...t,timeSeriesList:{...m,title:g}})},1e3,[g,i]),(0,N.Z)(()=>{i({...t,timeSeriesList:{...m,text:p}})},1e3,[p,i]),(0,s.useEffect)(()=>{Object.values(n.xL).includes(t.queryType)||i({...t,queryType:n.xL.TIME_SERIES_LIST})}),s.createElement(b.EditorRows,null,s.createElement(s.Fragment,null,s.createElement(x.a1,{refId:t.refId,variableOptionGroup:E,customMetaData:h,onChange:i,onRunQuery:r,datasource:e,query:t}),s.createElement(b.EditorField,{label:"Title",htmlFor:"annotation-query-title"},s.createElement(R.I,{id:"annotation-query-title",value:g,onChange:ne})),s.createElement(b.EditorField,{label:"Text",htmlFor:"annotation-query-text"},s.createElement(R.I,{id:"annotation-query-text",value:p,onChange:le}))),s.createElement(y.zI,null))},X=u=>u.target?.title!==void 0||u.target?.text!==void 0,k=u=>({prepareAnnotation:e=>{if(!X(e))return e;const{enable:t,name:r,iconColor:a}=e,{target:i}=e;return{datasource:e.datasource,enable:t,name:r,iconColor:a,target:{intervalMs:u.intervalMs,refId:i?.refId||"annotationQuery",queryType:n.xL.ANNOTATION,timeSeriesList:{projectName:i?.projectName||u.getDefaultProject(),filters:i?.filters||[],crossSeriesReducer:"REDUCE_NONE",perSeriesAligner:n.CS.ALIGN_NONE,title:i?.title||"",text:i?.text||""}}}},prepareQuery:e=>{if(e.target)return{...e.target,queryType:n.xL.ANNOTATION,type:"annotationQuery"}},QueryEditor:Z});var L=o(40467),q=o(59670);class _{constructor(e){this.datasource=e}async execute(e){try{switch(e.projectName||(e.projectName=this.datasource.getDefaultProject()),e.selectedQueryType){case n.Bp.Projects:return this.handleProjectsQuery();case n.Bp.Services:return this.handleServiceQuery(e);case n.Bp.MetricTypes:return this.handleMetricTypesQuery(e);case n.Bp.LabelKeys:return this.handleLabelKeysQuery(e);case n.Bp.LabelValues:return this.handleLabelValuesQuery(e);case n.Bp.ResourceTypes:return this.handleResourceTypeQuery(e);case n.Bp.Aligners:return this.handleAlignersQuery(e);case n.Bp.AlignmentPeriods:return this.handleAlignmentPeriodQuery();case n.Bp.Aggregations:return this.handleAggregationQuery(e);case n.Bp.SLOServices:return this.handleSLOServicesQuery(e);case n.Bp.SLO:return this.handleSLOQuery(e);case n.Bp.Selectors:return this.handleSelectorQuery();default:return[]}}catch(t){return console.error(`Could not run CloudMonitoringMetricFindQuery ${e}`,t),[]}}async handleProjectsQuery(){return(await this.datasource.getProjects()).map(t=>({text:t.label,value:t.value,expandable:!0}))}async handleServiceQuery({projectName:e}){const t=await this.datasource.getMetricTypes(e);return(0,v.qA)(t).map(a=>({text:a.serviceShortName,value:a.service,expandable:!0}))}async handleMetricTypesQuery({selectedService:e,projectName:t}){if(!e)return[];const r=await this.datasource.getMetricTypes(t);return(0,v.Qf)(r,this.datasource.templateSrv.replace(e)).map(a=>({text:a.displayName,value:a.type,expandable:!0}))}async handleLabelKeysQuery({selectedMetricType:e,projectName:t}){return e?(await(0,v.Qd)(this.datasource,e,t)).map(this.toFindQueryResult):[]}async handleLabelValuesQuery({selectedMetricType:e,labelKey:t,projectName:r}){if(!e)return[];const a="handleLabelValuesQuery",i=await this.datasource.getLabels(e,a,r,{groupBys:[t],crossSeriesReducer:"REDUCE_MEAN"}),l=this.datasource.templateSrv.replace(t);return(i.hasOwnProperty(l)?i[l]:[]).map(this.toFindQueryResult)}async handleResourceTypeQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const r="handleResourceTypeQueryQueryType";return(await this.datasource.getLabels(e,r,t))["resource.type"]?.map(this.toFindQueryResult)??[]}async handleAlignersQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const a=(await this.datasource.getMetricTypes(t)).find(i=>i.type===this.datasource.templateSrv.replace(e));return a?(0,v.oU)(a.valueType,a.metricKind).map(this.toFindQueryResult):[]}async handleAggregationQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const a=(await this.datasource.getMetricTypes(t)).find(i=>i.type===this.datasource.templateSrv.replace(e));return a?(0,v.A_)(a.valueType,a.metricKind).map(this.toFindQueryResult):[]}async handleSLOServicesQuery({projectName:e}){return(await this.datasource.getSLOServices(e)).map(this.toFindQueryResult)}async handleSLOQuery({selectedSLOService:e,projectName:t}){return(await this.datasource.getServiceLevelObjectives(t,e)).map(this.toFindQueryResult)}async handleSelectorQuery(){return L.IR.map(this.toFindQueryResult)}handleAlignmentPeriodQuery(){return L.dD.map(this.toFindQueryResult)}toFindQueryResult(e){return(0,d.isString)(e)?{text:e,expandable:!0}:{...e,expandable:!0}}}class ee extends q.Mg{constructor(e){super(),this.datasource=e,this.editor=C,this.metricFindQuery=new _(e),this.query=this.query.bind(this)}query(e){const t=(0,f.D)(this.metricFindQuery.execute(e.targets[0]));return(0,f.D)(this.datasource.ensureGCEDefaultProject()).pipe((0,O.z)(()=>t),(0,P.U)(r=>({data:r})))}}class te extends U.CK{constructor(e,t=(0,Y.J)(),r=(0,z.$t)()){super(e),this.instanceSettings=e,this.templateSrv=t,this.timeSrv=r,this.authenticationType=e.jsonData.authenticationType||"jwt",this.variables=new ee(this),this.intervalMs=0,this.annotations=k(this),this.backendSrv=(0,G.i)()}getVariables(){return this.templateSrv.getVariables().map(e=>`$${e.name}`)}query(e){return e.targets=e.targets.map(t=>({...this.migrateQuery(t),intervalMs:e.intervalMs})),super.query(e)}applyTemplateVariables(e,t){const{timeSeriesList:r,timeSeriesQuery:a,sloQuery:i}=e;return{...e,datasource:this.getRef(),intervalMs:this.intervalMs,timeSeriesList:r&&{...this.interpolateProps(r,t),projectName:this.templateSrv.replace(r.projectName?r.projectName:this.getDefaultProject(),t),filters:this.interpolateFilters(r.filters||[],t),groupBys:this.interpolateGroupBys(r.groupBys||[],t),view:r.view||"FULL"},timeSeriesQuery:a&&{...this.interpolateProps(a,t),projectName:this.templateSrv.replace(a.projectName?a.projectName:this.getDefaultProject(),t)},sloQuery:i&&this.interpolateProps(i,t)}}async getLabels(e,t,r,a,i){const l={targets:[{refId:t,datasource:this.getRef(),queryType:n.xL.TIME_SERIES_LIST,timeSeriesList:(0,v.Av)({projectName:this.templateSrv.replace(r),groupBys:this.interpolateGroupBys(a?.groupBys||[],{}),crossSeriesReducer:a?.crossSeriesReducer??"REDUCE_NONE",view:"HEADERS"},e)}],range:i??this.timeSrv.timeRange()},h=l.targets;return h.length?(0,M.n)((0,f.D)(this.ensureGCEDefaultProject()).pipe((0,O.z)(()=>this.backendSrv.fetch({url:"/api/ds/query",method:"POST",headers:this.getRequestHeaders(),data:{from:l.range.from.valueOf().toString(),to:l.range.to.valueOf().toString(),queries:h}})),(0,P.U)(({data:m})=>{const S=(0,J.z1)({data:m})?.data.map(p=>p.meta?.custom?.labels).filter(p=>!!p).reduce((p,c)=>{for(let E in c)p[E]||(p[E]=new Set),c[E]&&p[E].add(c[E]);return p},{});return Object.fromEntries(Object.entries(S).map(p=>(p[1]=Array.from(p[1]),p)))}))):(0,M.n)((0,V.of)({results:[]}))}async getGCEDefaultProject(){return this.getResource("gceDefaultProject")}getDefaultProject(){const{defaultProject:e,authenticationType:t,gceDefaultProject:r}=this.instanceSettings.jsonData;return t==="gce"?r||"":e||""}async ensureGCEDefaultProject(){const{authenticationType:e,gceDefaultProject:t}=this.instanceSettings.jsonData;e==="gce"&&!t&&(this.instanceSettings.jsonData.gceDefaultProject=await this.getGCEDefaultProject())}async getMetricTypes(e){return e?this.getResource(`metricDescriptors/v3/projects/${this.templateSrv.replace(e)}/metricDescriptors`):[]}async getSLOServices(e){return this.getResource(`services/v3/projects/${this.templateSrv.replace(e)}/services?pageSize=1000`)}async getServiceLevelObjectives(e,t){if(!t)return Promise.resolve([]);let{projectName:r,serviceId:a}=this.interpolateProps({projectName:e,serviceId:t});return this.getResource(`slo-services/v3/projects/${r}/services/${a}/serviceLevelObjectives`)}getProjects(){return this.getResource("projects")}migrateMetricTypeFilter(e,t){const r=["metric.type","=",e];return t?.length?t.concat("AND",r):r}migrateQuery(e){const{hide:t,refId:r,datasource:a,key:i,queryType:l,maxLines:h,metric:m,intervalMs:g,type:S,...p}=e;if(!e.hasOwnProperty("metricQuery")&&!e.hasOwnProperty("sloQuery")&&!e.hasOwnProperty("timeSeriesQuery")&&!e.hasOwnProperty("timeSeriesList"))return{datasource:a,key:i,refId:r,intervalMs:g,hide:t,queryType:S==="annotationQuery"?n.xL.ANNOTATION:n.xL.TIME_SERIES_LIST,timeSeriesList:{...p,view:p.view||"FULL"}};if((0,d.has)(e,"metricQuery")&&["metrics",n.xL.ANNOTATION].includes(e.queryType)){const c=(0,d.get)(e,"metricQuery");c.editorMode==="mql"?(e.timeSeriesQuery={projectName:c.projectName,query:c.query,graphPeriod:c.graphPeriod},e.queryType=n.xL.TIME_SERIES_QUERY):(e.timeSeriesList={projectName:c.projectName,crossSeriesReducer:c.crossSeriesReducer,alignmentPeriod:c.alignmentPeriod,perSeriesAligner:c.perSeriesAligner,groupBys:c.groupBys,filters:c.filters,view:c.view,preprocessor:c.preprocessor},e.queryType=n.xL.TIME_SERIES_LIST,c.metricType&&(e.timeSeriesList.filters=this.migrateMetricTypeFilter(c.metricType,e.timeSeriesList.filters))),e.aliasBy=c.aliasBy,e=(0,d.omit)(e,"metricQuery")}return e.queryType===n.xL.SLO&&(0,d.has)(e,"sloQuery.aliasBy")&&(e.aliasBy=(0,d.get)(e,"sloQuery.aliasBy"),e=(0,d.omit)(e,"sloQuery.aliasBy")),e}interpolateProps(e,t={}){return Object.entries(e).reduce((r,[a,i])=>({...r,[a]:i&&(0,d.isString)(i)?this.templateSrv.replace(i,t):i}),{})}filterQuery(e){if(e.hide)return!1;if(e.queryType===n.xL.SLO){if(!e.sloQuery)return!1;const{selectorName:t,serviceId:r,sloId:a,projectName:i,lookbackPeriod:l}=e.sloQuery;return!!t&&!!r&&!!a&&!!i&&(t!==L.Fh||!!l)}return e.queryType===n.xL.TIME_SERIES_QUERY?!!e.timeSeriesQuery&&!!e.timeSeriesQuery.projectName&&!!e.timeSeriesQuery.query:[n.xL.TIME_SERIES_LIST,n.xL.ANNOTATION].includes(e.queryType)?!!e.timeSeriesList&&!!e.timeSeriesList.projectName&&!!(0,v.WH)(e.timeSeriesList):!1}interpolateVariablesInQueries(e,t){return e.map(r=>this.applyTemplateVariables(this.migrateQuery(r),t))}interpolateFilters(e,t){const r=(0,d.chunk)(e,4).map(([i,l,h,m])=>({key:i,operator:l,value:h,...m&&{condition:m}})).filter(i=>i.value);return(0,d.flatten)(r.map(({key:i,operator:l,value:h,condition:m})=>[this.templateSrv.replace(i,t||{}),l,this.templateSrv.replace(h,t||{},g=>(0,d.isArray)(g)&&g.length?`(${g.join("|")})`:g),...m?[m]:[]]))||[]}interpolateGroupBys(e,t){let r=[];return(e||[]).forEach(a=>{const i=this.templateSrv.replace(a,t||{},"csv").split(",");Array.isArray(i)?r=r.concat(i):r.push(i)}),r}}const re={id:"stackdriver"};var se=o(41818);const ae=u=>{(0,se.ff)("grafana_ds_cloudmonitoring_dashboard_loaded",u)},ie=new I.hf(te).setQueryEditorHelp(F).setQueryEditor(K.W).setConfigEditor($).setVariableQueryEditor(C);(0,B.N$)().subscribe(A.Pl,({payload:{dashboardId:u,orgId:e,grafanaVersion:t,queries:r}})=>{const a=r[re.id];let i={[n.xL.TIME_SERIES_QUERY]:0,[n.xL.TIME_SERIES_LIST]:0,[n.xL.SLO]:0,[n.xL.ANNOTATION]:0};a.forEach(l=>{l.queryType===n.xL.TIME_SERIES_QUERY||l.queryType===n.xL.TIME_SERIES_LIST||l.queryType===n.xL.SLO||l.queryType===n.xL.ANNOTATION?i[l.queryType]++:l.queryType==="metrics"&&(l.hasOwnProperty("type")&&(0,d.get)(l,"type")==="annotationQuery"&&i.annotation++,(0,d.get)(l,"metricQuery.editorMode")==="mql"?i.timeSeriesQuery++:i.timeSeriesList++)}),a&&a.length>0&&ae({grafana_version:t,dashboard_id:u,org_id:e,mql_queries:i[n.xL.TIME_SERIES_QUERY],time_series_filter_queries:i[n.xL.TIME_SERIES_LIST],slo_queries:i[n.xL.SLO],annotation_queries:i[n.xL.ANNOTATION]})})}}]);

//# sourceMappingURL=cloudMonitoringPlugin.913bcabe8471092584f7.js.map